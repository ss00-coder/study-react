참조 투명성
	입력을 받아서 입력받은 그대로 출력하는 함수를 참조에 투명하다고 하며 순수 함수(pure function)라고 한다.
	하지만 입력을 받았을 때 다른 결과로 출력하거나 외부 함수에 영향을 끼치는 함수를 참조에 불투명하다고 한다.
	이렇게 순수 함수가 아닌 함수에서 Side-Effect가 발생한다.
	리액트는 모든 함수를 순수 함수로 유지할 것을 권장하고 있으며, 이로 인해 컴포넌트 재사용성이 좋아지고
	오류 검사 및 테스트도 좋아진다.

	const Component({data}) {
		return <p>data</p>;
	}

Side-Effect
	함수 내 특정 동작이 함수 외부에 영향을 끼쳐, 프로그램의 동작을 이해하기 어렵게 만드는 행위.
	이를 발생시키는 로직을 분리하여 개발하면 순수 함수화가 가능하다.

	1. setTimeout, setInterval
		예측하기 어려운 함수 종료 후 시점에서 어떤 작업을 하고 싶을 경우

	2. 서버 통신
		사용자가 요청했을 때 이후 또는 직전에 어떤 작업을 하고 싶을 경우

useEffect
	Side-Effect를 따로 관리하여 컴포넌트가 최대한 순수 함수를 유지할 수 있도록 도와주는 함수
	useEffect()는 랜더링이 모두 끝난 다음에 실행된다.

	랜더링 될 때 마다 실행
	useEffect(() => {})
	
	최초 랜더링(마운트)할 때만 실행
	useEffect(() => {}, [])	

	특정 컴포넌트 변경 시 실행
	useEffect(() => {}, [state])

















